name: SUSHI Publish NHSE

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
  
    steps:
      - uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 'current'
  
      - name: Install SUSHI
        run: npm install -g fsh-sushi
      
      - name: Install Publisher
        run: ./_updatePublisher.sh -y

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Install Ruby
        run: sudo apt install ruby ruby-all-dev -y

      - name: Install Jekyll
        run: sudo gem install jekyll jekyll-plantuml

      - name: Download and unpack font-awesome
        run: wget https://fontawesome.com/v4/assets/font-awesome-4.7.0.zip; unzip font-awesome-4.7.0.zip

      - name: Run FHIR server (TODO - load package from vars and validate - maybe just let the publisher handle that...)
        run: docker run -d -p 8080:8080 -e hapi.fhir.daoconfig_client_id_strategy=UUID -e hapi.fhir.client_id_strategy=ANY hapiproject/hapi:latest

      - name: Convert FSH to JSON and set up resources folder in input
        run: sushi .; mkdir -p input/resources

      - name: Sleep to give server time to start
        run: sleep 90

      - name: Load and query add-condition-transaction-example-1
        run: curl -X POST -H "Content-type:application/fhir+json;fhirVersion=4.0" -d @fsh-generated/resources/Bundle-add-condition-transaction-example-1.json http://localhost:8080/fhir; \
             curl $(cat input/queries/get-flags-associated-with-patient.md) | jq '.id = "QUERY-OUTPUT--add-condition-transaction-example-1"' > input/resources/QUERY-OUTPUT--add-condition-transaction-example-1.json

      - name: Load and query add-condition-transaction-example-2
        run: curl -X POST -H "Content-type:application/fhir+json;fhirVersion=4.0" -d @fsh-generated/resources/Bundle-add-condition-transaction-example-2.json http://localhost:8080/fhir; \
             curl $(cat input/queries/get-flags-associated-with-patient.md) | jq '.id = "QUERY-OUTPUT--add-condition-transaction-example-2"' > input/resources/QUERY-OUTPUT--add-condition-transaction-example-2.json

      - name: Build IG
        run: ./_genonce.sh

      - name: Publish IG Artefact
        uses: actions/upload-artifact@v3
        with:
          name: IG Archive
          path: ./output/

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}--build-cache-npm-packages-${{ hashFiles('**/package-lock.json') }}
